// Template: Base Controller (ApiControllerBase.t4) version 4.0

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Web.Http;
using System.Web.Http.Description;
using practica2_mtis.Seguridad.Models;

// Do not modify this file. This code was generated by AMF Server Scaffolder

namespace practica2_mtis.Seguridad
{
    [RoutePrefix("Seguridad")]
    public partial class SeguridadController : ApiController
    {


/// <summary>
		/// Validar si el usuario pertenece a una sala pasando el DNI - /Seguridad/validarUsuario
		/// </summary>
		/// <param name="dni"></param>
		/// <param name="sala"></param>
		/// <param name="restkey"></param>
		/// <returns>MultipleSeguridadValidarUsuarioGet</returns>
        [ResponseType(typeof(MultipleSeguridadValidarUsuarioGet))]
        [HttpGet]
        [Route("validarUsuario")]
        public virtual IHttpActionResult GetBase([FromUri] string dni,[FromUri] string sala,[FromUri] string restkey)
        {
            // Do not modify this code
                        return  ((ISeguridadController)this).Get(dni,sala,restkey);
                    }

/// <summary>
		/// Obtiene todos los niveles que un usuario puede tener - /Seguridad/obtenerNiveles
		/// </summary>
		/// <param name="dni"></param>
		/// <param name="restkey"></param>
		/// <returns>MultipleSeguridadObtenerNivelesGet</returns>
        [ResponseType(typeof(MultipleSeguridadObtenerNivelesGet))]
        [HttpGet]
        [Route("obtenerNiveles")]
        public virtual IHttpActionResult GetObtenerNivelesBase([FromUri] string dni,[FromUri] string restkey)
        {
            // Do not modify this code
                        return  ((ISeguridadController)this).GetObtenerNiveles(dni,restkey);
                    }

/// <summary>
		/// Asigna permisos de una sala a un usuario - /Seguridad/asignarPermisos
		/// </summary>
		/// <param name="content"></param>
		/// <param name="dni"></param>
		/// <param name="sala"></param>
		/// <param name="restkey"></param>
		/// <returns>MultipleSeguridadAsignarPermisosPost</returns>
        [ResponseType(typeof(MultipleSeguridadAsignarPermisosPost))]
        [HttpPost]
        [Route("asignarPermisos")]
        public virtual IHttpActionResult PostBase([FromBody] string content,[FromUri] string dni,[FromUri] string sala,[FromUri] string restkey)
        {
            // Do not modify this code
                        return  ((ISeguridadController)this).Post(content,dni,sala,restkey);
                    }

/// <summary>
		/// Elimina permisos de una sala a un usuario - /Seguridad/eliminarPermisos
		/// </summary>
		/// <param name="content"></param>
		/// <param name="dni"></param>
		/// <param name="sala"></param>
		/// <param name="restkey"></param>
		/// <returns>MultipleSeguridadEliminarPermisosPost</returns>
        [ResponseType(typeof(MultipleSeguridadEliminarPermisosPost))]
        [HttpPost]
        [Route("eliminarPermisos")]
        public virtual IHttpActionResult PostEliminarPermisosBase([FromBody] string content,[FromUri] string dni,[FromUri] string sala,[FromUri] string restkey)
        {
            // Do not modify this code
                        return  ((ISeguridadController)this).PostEliminarPermisos(content,dni,sala,restkey);
                    }
    }
}
