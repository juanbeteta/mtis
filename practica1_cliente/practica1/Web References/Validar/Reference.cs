//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace practica1.Validar {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ValidacionServiceSOAP", Namespace="http://www.mtis.org/ValidacionService/")]
    public partial class ValidacionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback validarNIFOperationCompleted;
        
        private System.Threading.SendOrPostCallback validarIBANOperationCompleted;
        
        private System.Threading.SendOrPostCallback validarNAFSSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ValidacionService() {
            this.Url = global::practica1.Properties.Settings.Default.practica1_Validar_ValidacionService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event validarNIFCompletedEventHandler validarNIFCompleted;
        
        /// <remarks/>
        public event validarIBANCompletedEventHandler validarIBANCompleted;
        
        /// <remarks/>
        public event validarNAFSSCompletedEventHandler validarNAFSSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mtis.org/ValidacionService/validarNIF", RequestNamespace="http://www.mtis.org/ValidacionService/", ResponseNamespace="http://www.mtis.org/ValidacionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("validarNIFSalida", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool validarNIF([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NIF, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SoapKey, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string salidaError) {
            object[] results = this.Invoke("validarNIF", new object[] {
                        NIF,
                        SoapKey});
            salidaError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validarNIFAsync(string NIF, string SoapKey) {
            this.validarNIFAsync(NIF, SoapKey, null);
        }
        
        /// <remarks/>
        public void validarNIFAsync(string NIF, string SoapKey, object userState) {
            if ((this.validarNIFOperationCompleted == null)) {
                this.validarNIFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidarNIFOperationCompleted);
            }
            this.InvokeAsync("validarNIF", new object[] {
                        NIF,
                        SoapKey}, this.validarNIFOperationCompleted, userState);
        }
        
        private void OnvalidarNIFOperationCompleted(object arg) {
            if ((this.validarNIFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validarNIFCompleted(this, new validarNIFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mtis.org/ValidacionService/validarIBAN", RequestNamespace="http://www.mtis.org/ValidacionService/", ResponseNamespace="http://www.mtis.org/ValidacionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("validarIBANSalida", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool validarIBAN([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IBAN, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SoapKey, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string salidaError) {
            object[] results = this.Invoke("validarIBAN", new object[] {
                        IBAN,
                        SoapKey});
            salidaError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validarIBANAsync(string IBAN, string SoapKey) {
            this.validarIBANAsync(IBAN, SoapKey, null);
        }
        
        /// <remarks/>
        public void validarIBANAsync(string IBAN, string SoapKey, object userState) {
            if ((this.validarIBANOperationCompleted == null)) {
                this.validarIBANOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidarIBANOperationCompleted);
            }
            this.InvokeAsync("validarIBAN", new object[] {
                        IBAN,
                        SoapKey}, this.validarIBANOperationCompleted, userState);
        }
        
        private void OnvalidarIBANOperationCompleted(object arg) {
            if ((this.validarIBANCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validarIBANCompleted(this, new validarIBANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mtis.org/ValidacionService/validarNAFSS", RequestNamespace="http://www.mtis.org/ValidacionService/", ResponseNamespace="http://www.mtis.org/ValidacionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("validarNAFSSSalida", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool validarNAFSS([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NAFSS, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string SoapKey, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string salidaError) {
            object[] results = this.Invoke("validarNAFSS", new object[] {
                        NAFSS,
                        SoapKey});
            salidaError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validarNAFSSAsync(string NAFSS, string SoapKey) {
            this.validarNAFSSAsync(NAFSS, SoapKey, null);
        }
        
        /// <remarks/>
        public void validarNAFSSAsync(string NAFSS, string SoapKey, object userState) {
            if ((this.validarNAFSSOperationCompleted == null)) {
                this.validarNAFSSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidarNAFSSOperationCompleted);
            }
            this.InvokeAsync("validarNAFSS", new object[] {
                        NAFSS,
                        SoapKey}, this.validarNAFSSOperationCompleted, userState);
        }
        
        private void OnvalidarNAFSSOperationCompleted(object arg) {
            if ((this.validarNAFSSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validarNAFSSCompleted(this, new validarNAFSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void validarNIFCompletedEventHandler(object sender, validarNIFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validarNIFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validarNIFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string salidaError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void validarIBANCompletedEventHandler(object sender, validarIBANCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validarIBANCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validarIBANCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string salidaError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void validarNAFSSCompletedEventHandler(object sender, validarNAFSSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validarNAFSSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validarNAFSSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string salidaError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591